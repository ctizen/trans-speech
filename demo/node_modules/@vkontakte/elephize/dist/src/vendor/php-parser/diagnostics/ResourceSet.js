/**
 * Copyright 2017 Matt Acosta
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourceSet = void 0;
var php_common_1 = require("../../php-common");
/**
 * Provides access to a lazily loaded external resource.
 *
 * @template T
 */
var ResourceSet = /** @class */ (function () {
    /**
     * Constructs a `ResourceSet` object.
     *
     * @param {string} resourcePath
     *   The location of the resource.
     */
    function ResourceSet(resourcePath) {
        /**
         * A key-value store for the resource data.
         */
        this.resources = null;
        this.resourcePath = resourcePath;
    }
    /**
     * Gets a value from the resource set.
     *
     * @param {string} key
     *   The identifier of the object in the resource set.
     */
    ResourceSet.prototype.get = function (key) {
        if (this.resources === null) {
            this.resources = this.loadResource(this.resourcePath);
        }
        return this.resources[key];
    };
    /**
     * Loads an external resource.
     *
     * @param {string} resourcePath
     *   The location of the resource.
     *
     * @returns {object}
     *   A key-value store containing the resource set's data.
     */
    ResourceSet.prototype.loadResource = function (path) {
        var resources;
        try {
            resources = require(path);
        }
        catch (e) {
            // Re-throw a standardized error type since the one thrown by `require()`
            // depends on the JS environment that is being used.
            throw new php_common_1.Exception("Unable to load resource at '" + this.resourcePath + "'");
        }
        if (typeof resources !== 'object') {
            throw new php_common_1.Exception('Invalid resource');
        }
        return resources; // @todo Needs validation of property types.
    };
    return ResourceSet;
}());
exports.ResourceSet = ResourceSet;
