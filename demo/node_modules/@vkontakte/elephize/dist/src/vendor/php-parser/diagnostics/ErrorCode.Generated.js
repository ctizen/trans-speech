/**
 * Copyright 2017 Matt Acosta
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// ----------------------------------------------------------------------------
// THIS IS A GENERATED FILE. DO NOT MODIFY.
// ----------------------------------------------------------------------------
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorCode = void 0;
var ErrorCode;
(function (ErrorCode) {
    /**
     * An error code that was unknown, but has since been found to be unnecessary.
     */
    ErrorCode[ErrorCode["Void"] = -1] = "Void";
    /**
     * An error code that has yet to be determined.
     */
    ErrorCode[ErrorCode["Unknown"] = 0] = "Unknown";
    /**
     * "The '%s' feature is experimental and unsupported, use %s to enable"
     */
    ErrorCode[ErrorCode["ERR_FeatureIsExperimental"] = 200] = "ERR_FeatureIsExperimental";
    /**
     * "The '%s' feature requires PHP %s or later"
     */
    ErrorCode[ErrorCode["ERR_FeatureNotAvailable"] = 201] = "ERR_FeatureNotAvailable";
    /**
     * "The feature 'class constant modifiers' requires PHP 7.1 or later"
     */
    ErrorCode[ErrorCode["ERR_FeatureClassConstantModifiers"] = 202] = "ERR_FeatureClassConstantModifiers";
    /**
     * "The feature 'list deconstruction with assignment by reference' requires PHP 7.3 or later"
     */
    ErrorCode[ErrorCode["ERR_FeatureListDeconstructionByRef"] = 203] = "ERR_FeatureListDeconstructionByRef";
    /**
     * "The feature 'list deconstruction by keys' requires PHP 7.1 or later"
     */
    ErrorCode[ErrorCode["ERR_FeatureListDeconstructionKeys"] = 204] = "ERR_FeatureListDeconstructionKeys";
    /**
     * "The feature 'shortened list deconstruction syntax' requires PHP 7.1 or later"
     */
    ErrorCode[ErrorCode["ERR_FeatureListDeconstructionShortSyntax"] = 205] = "ERR_FeatureListDeconstructionShortSyntax";
    /**
     * "The feature 'nullable types' requires PHP 7.1 or later"
     */
    ErrorCode[ErrorCode["ERR_FeatureNullableTypes"] = 206] = "ERR_FeatureNullableTypes";
    /**
     * "The feature 'spread operators in array initializers' requires PHP 7.4 or later"
     */
    ErrorCode[ErrorCode["ERR_FeatureSpreadOperatorInArrays"] = 207] = "ERR_FeatureSpreadOperatorInArrays";
    /**
     * "The feature 'trailing commas in argument lists' requires PHP 7.3 or later"
     */
    ErrorCode[ErrorCode["ERR_FeatureTrailingCommasInArgumentLists"] = 208] = "ERR_FeatureTrailingCommasInArgumentLists";
    /**
     * "The feature 'trailing commas in use declarations' requires PHP 7.2 or later"
     */
    ErrorCode[ErrorCode["ERR_FeatureTrailingCommasInUseDeclarations"] = 209] = "ERR_FeatureTrailingCommasInUseDeclarations";
    /**
     * "The feature 'try-catch union types' requires PHP 7.1 or later"
     */
    ErrorCode[ErrorCode["ERR_FeatureTryCatchUnionTypes"] = 210] = "ERR_FeatureTryCatchUnionTypes";
    /**
     * "The feature 'typed properties' requires PHP 7.4 or later"
     */
    ErrorCode[ErrorCode["ERR_FeatureTypedProperties"] = 211] = "ERR_FeatureTypedProperties";
    /**
     * "Unexpected character (%s: '%s') in source text"
     */
    ErrorCode[ErrorCode["ERR_UnexpectedCharacter"] = 1000] = "ERR_UnexpectedCharacter";
    /**
     * "Indentation contains both space and tab characters"
     */
    ErrorCode[ErrorCode["ERR_HeredocIndentHasSpacesAndTabs"] = 1001] = "ERR_HeredocIndentHasSpacesAndTabs";
    /**
     * "Indentation does not match that of the closing identifier"
     */
    ErrorCode[ErrorCode["ERR_HeredocIndentMismatch"] = 1002] = "ERR_HeredocIndentMismatch";
    /**
     * "Invalid number"
     */
    ErrorCode[ErrorCode["ERR_InvalidNumber"] = 1003] = "ERR_InvalidNumber";
    /**
     * "Invalid unicode escape sequence"
     */
    ErrorCode[ErrorCode["ERR_InvalidEscapeSequenceUnicode"] = 1004] = "ERR_InvalidEscapeSequenceUnicode";
    /**
     * "Code point in unicode escape sequence is greater than U+10FFFF"
     */
    ErrorCode[ErrorCode["ERR_UnicodeEscapeSequenceOverflow"] = 1005] = "ERR_UnicodeEscapeSequenceOverflow";
    /**
     * "Unterminated string"
     */
    ErrorCode[ErrorCode["ERR_UnterminatedString"] = 1006] = "ERR_UnterminatedString";
    /**
     * "Unterminated string constant"
     */
    ErrorCode[ErrorCode["ERR_UnterminatedStringConstant"] = 1007] = "ERR_UnterminatedStringConstant";
    /**
     * "Unterminated unicode escape sequence, '}' expected"
     */
    ErrorCode[ErrorCode["ERR_UnterminatedUnicodeEscapeSequence"] = 1008] = "ERR_UnterminatedUnicodeEscapeSequence";
    /**
     * "Invalid escape sequence"
     */
    ErrorCode[ErrorCode["WRN_InvalidEscapeSequence"] = 1009] = "WRN_InvalidEscapeSequence";
    /**
     * "Octal escape sequence cannot be greater than \377 (255)"
     */
    ErrorCode[ErrorCode["WRN_OctalEscapeSequenceOverflow"] = 1010] = "WRN_OctalEscapeSequenceOverflow";
    /**
     * "End of file found, '' expected"
     */
    ErrorCode[ErrorCode["WRN_UnterminatedComment"] = 1011] = "WRN_UnterminatedComment";
    /**
     * "Syntax error, '%s' expected"
     */
    ErrorCode[ErrorCode["ERR_Syntax"] = 2000] = "ERR_Syntax";
    /**
     * "Unexpected token '%s'"
     */
    ErrorCode[ErrorCode["ERR_UnexpectedToken"] = 2001] = "ERR_UnexpectedToken";
    /**
     * "An abstract class cannot be final"
     */
    ErrorCode[ErrorCode["ERR_AbstractClassIsFinal"] = 2002] = "ERR_AbstractClassIsFinal";
    /**
     * "Abstract members cannot be final"
     */
    ErrorCode[ErrorCode["ERR_AbstractMemberIsFinal"] = 2003] = "ERR_AbstractMemberIsFinal";
    /**
     * "Abstract members cannot be private"
     */
    ErrorCode[ErrorCode["ERR_AbstractMemberIsPrivate"] = 2004] = "ERR_AbstractMemberIsPrivate";
    /**
     * "An abstract method cannot have a body"
     */
    ErrorCode[ErrorCode["ERR_AbstractMethodHasBody"] = 2005] = "ERR_AbstractMethodHasBody";
    /**
     * "A positional argument must be used prior to unpacked arguments"
     */
    ErrorCode[ErrorCode["ERR_ArgumentAfterUnpack"] = 2006] = "ERR_ArgumentAfterUnpack";
    /**
     * "Class constants cannot be abstract, final, or static"
     */
    ErrorCode[ErrorCode["ERR_BadConstantModifier"] = 2007] = "ERR_BadConstantModifier";
    /**
     * "Interface members cannot be abstract or final"
     */
    ErrorCode[ErrorCode["ERR_BadInterfaceModifier"] = 2008] = "ERR_BadInterfaceModifier";
    /**
     * "Class properties cannot be abstract or final"
     */
    ErrorCode[ErrorCode["ERR_BadPropertyModifier"] = 2009] = "ERR_BadPropertyModifier";
    /**
     * "The modifier '%s' cannot be used on a trait alias"
     */
    ErrorCode[ErrorCode["ERR_BadTraitAliasModifier"] = 2010] = "ERR_BadTraitAliasModifier";
    /**
     * "The modifier '%s' cannot be used on a class, interface, or trait"
     */
    ErrorCode[ErrorCode["ERR_BadTypeModifier"] = 2011] = "ERR_BadTypeModifier";
    /**
     * "Base clause must precede an interface list"
     */
    ErrorCode[ErrorCode["ERR_BaseClauseAfterImplements"] = 2012] = "ERR_BaseClauseAfterImplements";
    /**
     * "Expected ':' or ';' after case label"
     */
    ErrorCode[ErrorCode["ERR_CaseLabelSeparatorExpected"] = 2013] = "ERR_CaseLabelSeparatorExpected";
    /**
     * "Expected 'catch' or 'finally'"
     */
    ErrorCode[ErrorCode["ERR_CatchOrFinallyExpected"] = 2014] = "ERR_CatchOrFinallyExpected";
    /**
     * "Constant, method, or property declaration expected"
     */
    ErrorCode[ErrorCode["ERR_ClassMemberExpected"] = 2015] = "ERR_ClassMemberExpected";
    /**
     * "Expected a class name or a reference to evaluate as a class name"
     */
    ErrorCode[ErrorCode["ERR_ClassNameOrReferenceExpected"] = 2016] = "ERR_ClassNameOrReferenceExpected";
    /**
     * "'}' expected"
     */
    ErrorCode[ErrorCode["ERR_CloseBraceExpected"] = 2017] = "ERR_CloseBraceExpected";
    /**
     * "']' expected"
     */
    ErrorCode[ErrorCode["ERR_CloseBracketExpected"] = 2018] = "ERR_CloseBracketExpected";
    /**
     * "')' expected"
     */
    ErrorCode[ErrorCode["ERR_CloseParenExpected"] = 2019] = "ERR_CloseParenExpected";
    /**
     * "':' or '=>' expected"
     */
    ErrorCode[ErrorCode["ERR_ColonOrDoubleArrowExpected"] = 2020] = "ERR_ColonOrDoubleArrowExpected";
    /**
     * "':' or ';' expected"
     */
    ErrorCode[ErrorCode["ERR_ColonOrSemicolonExpected"] = 2021] = "ERR_ColonOrSemicolonExpected";
    /**
     * "',' or '}' expected"
     */
    ErrorCode[ErrorCode["ERR_CommaOrCloseBraceExpected"] = 2022] = "ERR_CommaOrCloseBraceExpected";
    /**
     * "',' or ')' expected"
     */
    ErrorCode[ErrorCode["ERR_CommaOrCloseParenExpected"] = 2023] = "ERR_CommaOrCloseParenExpected";
    /**
     * "',' or '{' expected"
     */
    ErrorCode[ErrorCode["ERR_CommaOrOpenBraceExpected"] = 2024] = "ERR_CommaOrOpenBraceExpected";
    /**
     * "',' or ';' expected"
     */
    ErrorCode[ErrorCode["ERR_CommaOrSemicolonExpected"] = 2025] = "ERR_CommaOrSemicolonExpected";
    /**
     * "At least one variable is required to deconstruct an expression"
     */
    ErrorCode[ErrorCode["ERR_DeconstructVariableMissing"] = 2026] = "ERR_DeconstructVariableMissing";
    /**
     * "A destructuring variable cannot be assigned by reference"
     */
    ErrorCode[ErrorCode["ERR_DeconstructVariableReference"] = 2027] = "ERR_DeconstructVariableReference";
    /**
     * "'=>' or ')' expected"
     */
    ErrorCode[ErrorCode["ERR_DoubleArrowOrCloseParenExpected"] = 2028] = "ERR_DoubleArrowOrCloseParenExpected";
    /**
     * "Duplicate '%s' modifier"
     */
    ErrorCode[ErrorCode["ERR_DuplicateModifier"] = 2029] = "ERR_DuplicateModifier";
    /**
     * "'...' or ')' expected"
     */
    ErrorCode[ErrorCode["ERR_EllipsisOrCloseParenExpected"] = 2030] = "ERR_EllipsisOrCloseParenExpected";
    /**
     * "Expression expected, got '%s'"
     */
    ErrorCode[ErrorCode["ERR_ExpressionExpected"] = 2031] = "ERR_ExpressionExpected";
    /**
     * "End of file found, expression expected"
     */
    ErrorCode[ErrorCode["ERR_ExpressionExpectedEOF"] = 2032] = "ERR_ExpressionExpectedEOF";
    /**
     * "The given expression does not have a usable address"
     */
    ErrorCode[ErrorCode["ERR_ExpressionNotAddressable"] = 2033] = "ERR_ExpressionNotAddressable";
    /**
     * "Expression or ')' expected"
     */
    ErrorCode[ErrorCode["ERR_ExpressionOrCloseParenExpected"] = 2034] = "ERR_ExpressionOrCloseParenExpected";
    /**
     * "Expression or ':' expected"
     */
    ErrorCode[ErrorCode["ERR_ExpressionOrColonExpected"] = 2035] = "ERR_ExpressionOrColonExpected";
    /**
     * "Expression or ';' expected"
     */
    ErrorCode[ErrorCode["ERR_ExpressionOrSemicolonExpected"] = 2036] = "ERR_ExpressionOrSemicolonExpected";
    /**
     * "__halt_compiler() must be used in outermost scope"
     */
    ErrorCode[ErrorCode["ERR_HaltCompilerScope"] = 2037] = "ERR_HaltCompilerScope";
    /**
     * "Identifier expected"
     */
    ErrorCode[ErrorCode["ERR_IdentifierExpected"] = 2038] = "ERR_IdentifierExpected";
    /**
     * "Identifier expected, '%s' is a keyword"
     */
    ErrorCode[ErrorCode["ERR_IdentifierExpectedKeyword"] = 2039] = "ERR_IdentifierExpectedKeyword";
    /**
     * "Identifier or '}' expected"
     */
    ErrorCode[ErrorCode["ERR_IdentifierOrCloseBraceExpected"] = 2040] = "ERR_IdentifierOrCloseBraceExpected";
    /**
     * "Identifier or '(' expected"
     */
    ErrorCode[ErrorCode["ERR_IdentifierOrOpenParenExpected"] = 2041] = "ERR_IdentifierOrOpenParenExpected";
    /**
     * "Argument list, base clause, interface list, or '{' expected"
     */
    ErrorCode[ErrorCode["ERR_IncompleteAnonymousClassDeclaration"] = 2042] = "ERR_IncompleteAnonymousClassDeclaration";
    /**
     * "Expected an array initialization expression or destructuring assignment"
     */
    ErrorCode[ErrorCode["ERR_IncompleteArrayOrDestructure"] = 2043] = "ERR_IncompleteArrayOrDestructure";
    /**
     * "Closure parameters or '&' expected"
     */
    ErrorCode[ErrorCode["ERR_IncompleteArrowFunction"] = 2044] = "ERR_IncompleteArrowFunction";
    /**
     * "Base clause, interface list, or '{' expected"
     */
    ErrorCode[ErrorCode["ERR_IncompleteClassDeclaration"] = 2045] = "ERR_IncompleteClassDeclaration";
    /**
     * "Interface list or '{' expected"
     */
    ErrorCode[ErrorCode["ERR_IncompleteClassDeclarationWithExtends"] = 2046] = "ERR_IncompleteClassDeclarationWithExtends";
    /**
     * "Lexical variables, return type, or '{' expected"
     */
    ErrorCode[ErrorCode["ERR_IncompleteClosure"] = 2047] = "ERR_IncompleteClosure";
    /**
     * "Function name, closure parameters, or '&' expected"
     */
    ErrorCode[ErrorCode["ERR_IncompleteFunctionDeclaration"] = 2048] = "ERR_IncompleteFunctionDeclaration";
    /**
     * "Base clause or '{' expected"
     */
    ErrorCode[ErrorCode["ERR_IncompleteInterfaceDeclaration"] = 2049] = "ERR_IncompleteInterfaceDeclaration";
    /**
     * "Expected a namespace declaration or relative name"
     */
    ErrorCode[ErrorCode["ERR_IncompleteNamespace"] = 2050] = "ERR_IncompleteNamespace";
    /**
     * "Variable, '&' or '...' expected"
     */
    ErrorCode[ErrorCode["ERR_IncompleteParameter"] = 2051] = "ERR_IncompleteParameter";
    /**
     * "Parameter list, initializer, or ')' expected"
     */
    ErrorCode[ErrorCode["ERR_IncompleteParameterList"] = 2052] = "ERR_IncompleteParameterList";
    /**
     * "Property list, initializer, or ';' expected"
     */
    ErrorCode[ErrorCode["ERR_IncompletePropertyDeclaration"] = 2053] = "ERR_IncompletePropertyDeclaration";
    /**
     * "Static variable list, initializer, or ';' expected"
     */
    ErrorCode[ErrorCode["ERR_IncompleteStaticDeclaration"] = 2054] = "ERR_IncompleteStaticDeclaration";
    /**
     * "Expected 'as' or '::' in trait adaptation"
     */
    ErrorCode[ErrorCode["ERR_IncompleteTraitAdaptation"] = 2055] = "ERR_IncompleteTraitAdaptation";
    /**
     * "Trait list, adaptation clause, or ';' expected"
     */
    ErrorCode[ErrorCode["ERR_IncompleteTraitUse"] = 2056] = "ERR_IncompleteTraitUse";
    /**
     * "Expected additional imported names, an alias, or ';' in use declaration"
     */
    ErrorCode[ErrorCode["ERR_IncompleteUseDeclaration"] = 2057] = "ERR_IncompleteUseDeclaration";
    /**
     * "Expected additional imported names, an alias, or '}' in use group clause"
     */
    ErrorCode[ErrorCode["ERR_IncompleteUseGroupDeclaration"] = 2058] = "ERR_IncompleteUseGroupDeclaration";
    /**
     * "Expected an identifier or use group clause"
     */
    ErrorCode[ErrorCode["ERR_IncompleteUseName"] = 2059] = "ERR_IncompleteUseName";
    /**
     * "Expected a variable or indirect expression to evaluate as a variable name"
     */
    ErrorCode[ErrorCode["ERR_IncompleteVariable"] = 2060] = "ERR_IncompleteVariable";
    /**
     * "Indentation expected"
     */
    ErrorCode[ErrorCode["ERR_IndentExpected"] = 2061] = "ERR_IndentExpected";
    /**
     * "The keyword 'implements' cannot be used on an interface"
     */
    ErrorCode[ErrorCode["ERR_InterfaceImplementsList"] = 2062] = "ERR_InterfaceImplementsList";
    /**
     * "Interfaces cannot contain method implementations"
     */
    ErrorCode[ErrorCode["ERR_InterfaceMethodDefinition"] = 2063] = "ERR_InterfaceMethodDefinition";
    /**
     * "Constant or method declaration expected"
     */
    ErrorCode[ErrorCode["ERR_InterfaceMemberExpected"] = 2064] = "ERR_InterfaceMemberExpected";
    /**
     * "Interface members must be public"
     */
    ErrorCode[ErrorCode["ERR_InterfaceMemberNotPublic"] = 2065] = "ERR_InterfaceMemberNotPublic";
    /**
     * "Interfaces cannot contain properties"
     */
    ErrorCode[ErrorCode["ERR_InterfaceProperty"] = 2066] = "ERR_InterfaceProperty";
    /**
     * "Interfaces cannot contain traits"
     */
    ErrorCode[ErrorCode["ERR_InterfaceTrait"] = 2067] = "ERR_InterfaceTrait";
    /**
     * "Iteration depth in '%s' statement must be a constant integer"
     */
    ErrorCode[ErrorCode["ERR_InvalidIterationDepth"] = 2068] = "ERR_InvalidIterationDepth";
    /**
     * "Invalid token '%s' in class, interface, or trait member declaration"
     */
    ErrorCode[ErrorCode["ERR_InvalidMemberDeclaration"] = 2069] = "ERR_InvalidMemberDeclaration";
    /**
     * "Iteration depth or ';' expected"
     */
    ErrorCode[ErrorCode["ERR_IterationDepthOrSemicolonExpected"] = 2070] = "ERR_IterationDepthOrSemicolonExpected";
    /**
     * "A method reference requires a '::' after a class name"
     */
    ErrorCode[ErrorCode["ERR_MalformedMethodReference"] = 2071] = "ERR_MalformedMethodReference";
    /**
     * "Method name expected"
     */
    ErrorCode[ErrorCode["ERR_MethodNameExpected"] = 2072] = "ERR_MethodNameExpected";
    /**
     * "Method name or '&' expected"
     */
    ErrorCode[ErrorCode["ERR_MethodNameOrAmpersandExpected"] = 2073] = "ERR_MethodNameOrAmpersandExpected";
    /**
     * "Switch statements may only contain one 'default' label"
     */
    ErrorCode[ErrorCode["ERR_MultipleDefaultSwitchLabels"] = 2074] = "ERR_MultipleDefaultSwitchLabels";
    /**
     * "Classes may only inherit from one base class"
     */
    ErrorCode[ErrorCode["ERR_MultipleInheritance"] = 2075] = "ERR_MultipleInheritance";
    /**
     * "The modifier '%s' cannot be used with another visibility modifier"
     */
    ErrorCode[ErrorCode["ERR_MultipleVisibilityModifiers"] = 2076] = "ERR_MultipleVisibilityModifiers";
    /**
     * "Namespace declarations cannot be nested"
     */
    ErrorCode[ErrorCode["ERR_NamespaceIsNested"] = 2077] = "ERR_NamespaceIsNested";
    /**
     * "'{' expected"
     */
    ErrorCode[ErrorCode["ERR_OpenBraceExpected"] = 2078] = "ERR_OpenBraceExpected";
    /**
     * "'{' or ':' expected"
     */
    ErrorCode[ErrorCode["ERR_OpenBraceOrColonExpected"] = 2079] = "ERR_OpenBraceOrColonExpected";
    /**
     * "'{' or ';' expected"
     */
    ErrorCode[ErrorCode["ERR_OpenBraceOrSemicolonExpected"] = 2080] = "ERR_OpenBraceOrSemicolonExpected";
    /**
     * "'(' expected"
     */
    ErrorCode[ErrorCode["ERR_OpenParenExpected"] = 2081] = "ERR_OpenParenExpected";
    /**
     * "Parameter expected"
     */
    ErrorCode[ErrorCode["ERR_ParameterExpected"] = 2082] = "ERR_ParameterExpected";
    /**
     * "Parameter or ')' expected"
     */
    ErrorCode[ErrorCode["ERR_ParameterOrCloseParenExpected"] = 2083] = "ERR_ParameterOrCloseParenExpected";
    /**
     * "Property expected"
     */
    ErrorCode[ErrorCode["ERR_PropertyExpected"] = 2084] = "ERR_PropertyExpected";
    /**
     * "Property name expected after '$'"
     */
    ErrorCode[ErrorCode["ERR_PropertyNameExpected"] = 2085] = "ERR_PropertyNameExpected";
    /**
     * "';' expected"
     */
    ErrorCode[ErrorCode["ERR_SemicolonExpected"] = 2086] = "ERR_SemicolonExpected";
    /**
     * "Statement expected"
     */
    ErrorCode[ErrorCode["ERR_StatementExpected"] = 2087] = "ERR_StatementExpected";
    /**
     * "Statement or ':' expected"
     */
    ErrorCode[ErrorCode["ERR_StatementOrColonExpected"] = 2088] = "ERR_StatementOrColonExpected";
    /**
     * "Closure, variable, or '::' expected"
     */
    ErrorCode[ErrorCode["ERR_StaticExpressionExpected"] = 2089] = "ERR_StaticExpressionExpected";
    /**
     * "Identifier, variable, or '{' expected"
     */
    ErrorCode[ErrorCode["ERR_StaticMemberExpected"] = 2090] = "ERR_StaticMemberExpected";
    /**
     * "An interpolated element access expression must specify an offset"
     */
    ErrorCode[ErrorCode["ERR_StringOffsetExpected"] = 2091] = "ERR_StringOffsetExpected";
    /**
     * "Integer offset expected"
     */
    ErrorCode[ErrorCode["ERR_StringOffsetNumberExpected"] = 2092] = "ERR_StringOffsetNumberExpected";
    /**
     * "Expected an expression or the name of a variable"
     */
    ErrorCode[ErrorCode["ERR_StringVariableNameExpected"] = 2093] = "ERR_StringVariableNameExpected";
    /**
     * "Expected 'as' or 'insteadof' after method reference"
     */
    ErrorCode[ErrorCode["ERR_TraitAdaptationKeywordExpected"] = 2094] = "ERR_TraitAdaptationKeywordExpected";
    /**
     * "Traits cannot contain constants"
     */
    ErrorCode[ErrorCode["ERR_TraitConstant"] = 2095] = "ERR_TraitConstant";
    /**
     * "Method or property declaration expected"
     */
    ErrorCode[ErrorCode["ERR_TraitMemberExpected"] = 2096] = "ERR_TraitMemberExpected";
    /**
     * "Type union or variable expected"
     */
    ErrorCode[ErrorCode["ERR_TryUnionOrVariableExpected"] = 2097] = "ERR_TryUnionOrVariableExpected";
    /**
     * "Type expected"
     */
    ErrorCode[ErrorCode["ERR_TypeExpected"] = 2098] = "ERR_TypeExpected";
    /**
     * "A use type has already been specified"
     */
    ErrorCode[ErrorCode["ERR_UseTypeAlreadySpecified"] = 2099] = "ERR_UseTypeAlreadySpecified";
    /**
     * "Expected an imported type, constant, or function"
     */
    ErrorCode[ErrorCode["ERR_UseTypeExpected"] = 2100] = "ERR_UseTypeExpected";
    /**
     * "Expected an imported type, constant, function, or '}'"
     */
    ErrorCode[ErrorCode["ERR_UseTypeOrCloseBraceExpected"] = 2101] = "ERR_UseTypeOrCloseBraceExpected";
    /**
     * "Variable expected"
     */
    ErrorCode[ErrorCode["ERR_VariableExpected"] = 2102] = "ERR_VariableExpected";
    /**
     * "Variable name expected after '$'"
     */
    ErrorCode[ErrorCode["ERR_VariableNameExpected"] = 2103] = "ERR_VariableNameExpected";
    /**
     * "Variable or '...' expected"
     */
    ErrorCode[ErrorCode["ERR_VariableOrEllipsisExpected"] = 2104] = "ERR_VariableOrEllipsisExpected";
    /**
     * "A variadic parameter cannot have a default value"
     */
    ErrorCode[ErrorCode["ERR_VariadicHasDefaultValue"] = 2105] = "ERR_VariadicHasDefaultValue";
    /**
     * "A variadic parameter must be the last parameter of a function or method signature"
     */
    ErrorCode[ErrorCode["ERR_VariadicIsNotLastParameter"] = 2106] = "ERR_VariadicIsNotLastParameter";
    /**
     * "Empty switch block"
     */
    ErrorCode[ErrorCode["WRN_EmptySwitchBlock"] = 2107] = "WRN_EmptySwitchBlock";
    /**
     * "Possible mistaken empty statement (use '{}' if this was intended)"
     */
    ErrorCode[ErrorCode["WRN_PossibleMistakenEmptyStatement"] = 2108] = "WRN_PossibleMistakenEmptyStatement";
    /**
     * "The '(real)' type cast is deprecated, use '(float)' instead"
     */
    ErrorCode[ErrorCode["WRN_RealCast"] = 2109] = "WRN_RealCast";
    /**
     * "The '(unset)' type cast is deprecated, use 'null' instead"
     */
    ErrorCode[ErrorCode["WRN_UnsetCast"] = 2110] = "WRN_UnsetCast";
})(ErrorCode = exports.ErrorCode || (exports.ErrorCode = {}));
