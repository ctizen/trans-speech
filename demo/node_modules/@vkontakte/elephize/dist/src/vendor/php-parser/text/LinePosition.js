/**
 * Copyright 2017 Matt Acosta
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
exports.LinePosition = void 0;
var php_common_1 = require("../../php-common");
/**
 * A line number and character position.
 */
var LinePosition = /** @class */ (function () {
    /**
     * Constructs a `LinePosition` object.
     *
     * @param {number} line
     *   The line number, starting from 0.
     * @param {number} character
     *   The offset of the character in the line.
     */
    function LinePosition(line, character) {
        if (line === void 0) { line = 0; }
        if (character === void 0) { character = 0; }
        if (line < 0 || character < 0) {
            throw new php_common_1.ArgumentOutOfRangeException();
        }
        this.line = line;
        this.character = character;
    }
    /**
     * @inheritDoc
     */
    LinePosition.prototype.compareTo = function (value) {
        var diff = this.line - value.line;
        return diff !== 0 ? diff : this.character - value.character;
    };
    /**
     * @inheritDoc
     */
    LinePosition.prototype.equals = function (value) {
        return this.line === value.line && this.character === value.character;
    };
    /**
     * @inheritDoc
     */
    LinePosition.prototype.hashCode = function () {
        return php_common_1.Hash.combine(this.line, this.character);
    };
    /**
     * A line position at the start of a document (0,0).
     */
    LinePosition.Zero = new LinePosition();
    return LinePosition;
}());
exports.LinePosition = LinePosition;
