/**
 * Copyright 2017 Matt Acosta
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
'use strict';
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SyntaxList = exports.ErrorCodeInfo = void 0;
__exportStar(require("./diagnostics/Diagnostic"), exports);
__exportStar(require("./diagnostics/DiagnosticSeverity"), exports);
__exportStar(require("./diagnostics/ErrorCode.Generated"), exports);
var ErrorCodeInfo_Generated_1 = require("./diagnostics/ErrorCodeInfo.Generated");
Object.defineProperty(exports, "ErrorCodeInfo", { enumerable: true, get: function () { return ErrorCodeInfo_Generated_1.ErrorCodeInfo; } });
__exportStar(require("./diagnostics/SyntaxDiagnostic"), exports);
__exportStar(require("./language/TokenKind"), exports);
__exportStar(require("./language/syntax/ISyntaxNode"), exports);
__exportStar(require("./language/syntax/ISyntaxNodeQueryable"), exports);
__exportStar(require("./language/syntax/ISyntaxToken"), exports);
__exportStar(require("./language/syntax/ISyntaxTreeTraversable"), exports);
__exportStar(require("./language/syntax/ISyntaxTrivia"), exports);
__exportStar(require("./language/syntax/ISyntaxTriviaList"), exports);
__exportStar(require("./language/syntax/ISyntaxVisitorAccess"), exports);
__exportStar(require("./language/syntax/SourceTextSyntaxNode"), exports);
var SyntaxList_1 = require("./language/syntax/SyntaxList");
Object.defineProperty(exports, "SyntaxList", { enumerable: true, get: function () { return SyntaxList_1.SyntaxList; } });
__exportStar(require("./language/syntax/SyntaxNode.Generated"), exports);
__exportStar(require("./language/syntax/SyntaxNode"), exports);
__exportStar(require("./language/syntax/SyntaxNodeExtensions"), exports);
__exportStar(require("./language/syntax/SyntaxToken"), exports);
__exportStar(require("./language/syntax/SyntaxTransform.Generated"), exports);
__exportStar(require("./language/syntax/SyntaxTrivia"), exports);
__exportStar(require("./language/syntax/SyntaxTriviaList"), exports);
__exportStar(require("./language/syntax/SyntaxVisitor.Generated"), exports);
__exportStar(require("./language/syntax/SyntaxWalker"), exports);
__exportStar(require("./language/syntax/SyntaxWalkerDepth"), exports);
// export * from './parser/Character';
__exportStar(require("./parser/DocumentationMode"), exports);
// export * from './parser/ExpressionType';
__exportStar(require("./parser/Lexer"), exports);
// export * from './parser/ModifierFlags';
// export * from './parser/ParseContext';
__exportStar(require("./parser/Parser"), exports);
__exportStar(require("./parser/PhpLexer"), exports);
__exportStar(require("./parser/PhpLexerState"), exports);
__exportStar(require("./parser/PhpParser"), exports);
__exportStar(require("./parser/PhpParserOptions"), exports);
__exportStar(require("./parser/PhpSyntaxTree"), exports);
__exportStar(require("./parser/PhpVersion"), exports);
// export * from './parser/Precedence';
__exportStar(require("./parser/SyntaxTree"), exports);
__exportStar(require("./parser/TemplateSpan"), exports);
__exportStar(require("./parser/Token"), exports);
__exportStar(require("./text/BomKind"), exports);
__exportStar(require("./text/Encoding"), exports);
__exportStar(require("./text/ISourceText"), exports);
__exportStar(require("./text/ISourceTextContainer"), exports);
__exportStar(require("./text/LinePosition"), exports);
__exportStar(require("./text/SourceTextBase"), exports);
__exportStar(require("./text/SourceTextFactory"), exports);
__exportStar(require("./text/TextChange"), exports);
__exportStar(require("./text/TextSpan"), exports);
