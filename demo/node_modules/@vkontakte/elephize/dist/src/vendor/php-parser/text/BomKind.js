/**
 * Copyright 2017 Matt Acosta
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
exports.BomKindInfo = exports.BomKind = void 0;
/**
 * The byte order mark of a source file.
 */
var BomKind;
(function (BomKind) {
    BomKind[BomKind["Unknown"] = 0] = "Unknown";
    /**
     * UTF-16 (big endian).
     */
    BomKind[BomKind["UTF16BE"] = 1] = "UTF16BE";
    /**
     * UTF-16 (little endian).
     */
    BomKind[BomKind["UTF16LE"] = 2] = "UTF16LE";
    /**
     * UTF-8.
     */
    BomKind[BomKind["UTF8"] = 3] = "UTF8";
})(BomKind = exports.BomKind || (exports.BomKind = {}));
/**
 * Provides general information about a byte order mark.
 */
var BomKindInfo = /** @class */ (function () {
    function BomKindInfo() {
    }
    /**
     * Returns the length of a byte order mark, or 0 if the BOM is unsupported.
     */
    BomKindInfo.getLength = function (kind) {
        switch (kind) {
            case BomKind.UTF16BE:
            case BomKind.UTF16LE:
                return 2;
            case BomKind.UTF8:
                return 3;
            default:
                return 0;
        }
    };
    return BomKindInfo;
}());
exports.BomKindInfo = BomKindInfo;
