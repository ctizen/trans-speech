"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.tTernaryOperator = void 0;
var renderNodes_1 = require("../components/codegen/renderNodes");
function tTernaryOperator(node, context) {
    if (node.condition.getText() === 'window._elephizeIsServer') { // special variable for conditional rendering!
        return renderNodes_1.renderNode(node.whenTrue, context);
    }
    var _a = __read(renderNodes_1.renderNodes([node.condition, node.whenTrue, node.whenFalse], context, false), 3), condition = _a[0], ifTrue = _a[1], ifFalse = _a[2];
    return condition + " ? " + ifTrue + " : " + ifFalse;
}
exports.tTernaryOperator = tTernaryOperator;
