"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.arrayPop = void 0;
var _propName_1 = require("./_propName");
var basicTypes_1 = require("../../components/typeInference/basicTypes");
var ast_1 = require("../../utils/ast");
var renderNodes_1 = require("../../components/codegen/renderNodes");
var functionScope_1 = require("../../components/functionScope");
/**
 * Array.prototype.pop support
 *
 * @param node
 * @param context
 */
var arrayPop = function (node, context) {
    if (_propName_1.propNameIs('pop', node)) {
        if (!basicTypes_1.hasArrayType(node.expression, context.checker, context.log)) {
            context.log.error('Left-hand expression must have array-like or iterable inferred type', [], context.log.ctx(node));
            return 'null';
        }
        functionScope_1.checkModificationInNestedScope(ast_1.getLeftExpr(node.expression), context);
        var varName = renderNodes_1.renderNode(ast_1.getCallExpressionLeftSide(node), context);
        return "array_pop(" + varName + ")";
    }
};
exports.arrayPop = arrayPop;
