"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.tTemplateStatic = exports.tTemplateSpan = exports.tTemplateExpression = void 0;
var escapeString_1 = require("../utils/escapeString");
var renderNodes_1 = require("../components/codegen/renderNodes");
var tTemplateExpression = function (node, context) {
    return renderNodes_1.renderNodes(__spreadArray([node.head], __read(node.templateSpans)), context).join(' . ');
};
exports.tTemplateExpression = tTemplateExpression;
function tTemplateSpan(node, context) {
    var _a = __read(renderNodes_1.renderNodes([node.expression, node.literal], context), 2), expr = _a[0], literal = _a[1];
    return "(" + expr + ")" + (literal && literal !== '""' ? ' . ' + literal : '');
}
exports.tTemplateSpan = tTemplateSpan;
function tTemplateStatic(node) {
    var str = escapeString_1.escapeString(node.text);
    if (str) {
        return '"' + str + '"';
    }
    return '';
}
exports.tTemplateStatic = tTemplateStatic;
