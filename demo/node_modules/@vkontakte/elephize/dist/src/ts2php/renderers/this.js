"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tThis = void 0;
var ts = require("typescript");
var classModule_1 = require("../components/cjsModules/classModule");
var ast_1 = require("../utils/ast");
var tThis = function (node, context) {
    if (context.moduleDescriptor instanceof classModule_1.ClassModule) {
        return '$this';
    }
    else {
        // Disallow usage of `this`: we don't support classes and scope binding.
        context.log.error('Keyword `this` is not supported for transpilation', [], context.log.ctx(node));
        ast_1.flagParentOfType(node, [
            ts.SyntaxKind.ExpressionStatement,
            ts.SyntaxKind.VariableDeclaration,
            ts.SyntaxKind.IfStatement,
        ], { drop: true, dropReplacement: '/* ERROR: `this` keyword used in expression */' }, context.nodeFlagsStore);
        return '';
    }
};
exports.tThis = tThis;
