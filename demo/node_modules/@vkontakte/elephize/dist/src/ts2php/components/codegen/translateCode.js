"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.translateCodeAndWatch = exports.translateCode = void 0;
var buildProgramFactory_1 = require("./programUtils/buildProgramFactory");
var nodeFlagStore_1 = require("./nodeFlagStore");
var translateProgram_1 = require("./programUtils/translateProgram");
var defaultCompilerOptions_1 = require("./defaultCompilerOptions");
var watchProgramFactory_1 = require("./programUtils/watchProgramFactory");
var translateCode = function (fileNames, ignoredImports, replacedImports, tsPaths, log, _a) {
    var _b = _a.aliases, aliases = _b === void 0 ? {} : _b, baseDir = _a.baseDir, _c = _a.disableCodeElimination, disableCodeElimination = _c === void 0 ? false : _c, namespaces = _a.namespaces, encoding = _a.encoding, printImportTree = _a.printImportTree, serverFilesRoot = _a.serverFilesRoot, builtinsPath = _a.builtinsPath, _d = _a.onBeforeRender, onBeforeRender = _d === void 0 ? function () { return undefined; } : _d, onData = _a.onData, _e = _a.onFinish, onFinish = _e === void 0 ? function () { return undefined; } : _e, _f = _a.options, options = _f === void 0 ? defaultCompilerOptions_1.defaultOptions : _f, _g = _a.jsxPreferences, jsxPreferences = _g === void 0 ? {} : _g, _h = _a.hooks, hooks = _h === void 0 ? {} : _h;
    // Enable more logging using env var
    var nodeFlagStore = new nodeFlagStore_1.NodeFlagStore();
    var _j = __read(buildProgramFactory_1.getBuildProgram(fileNames, ignoredImports, replacedImports, baseDir, tsPaths, {
        compilerOptions: __assign(__assign({}, defaultCompilerOptions_1.defaultOptions), options),
    }, function () { return null; }, log), 2), program = _j[0], replacements = _j[1];
    translateProgram_1.translateProgram(program, replacements, nodeFlagStore, log, {
        onData: onData,
        onBeforeRender: onBeforeRender,
        baseDir: baseDir,
        disableCodeElimination: disableCodeElimination,
        aliases: aliases,
        namespaces: namespaces,
        printImportTree: printImportTree,
        serverFilesRoot: serverFilesRoot,
        builtinsPath: builtinsPath,
        encoding: encoding,
        options: options,
        jsxPreferences: jsxPreferences,
        hooks: hooks,
        onFinish: onFinish,
    });
    return nodeFlagStore;
};
exports.translateCode = translateCode;
var translateCodeAndWatch = function (fileNames, ignoredImports, replacedImports, tsPaths, log, _a) {
    var _b = _a.aliases, aliases = _b === void 0 ? {} : _b, baseDir = _a.baseDir, _c = _a.disableCodeElimination, disableCodeElimination = _c === void 0 ? false : _c, getCloseHandle = _a.getCloseHandle, namespaces = _a.namespaces, encoding = _a.encoding, printImportTree = _a.printImportTree, _d = _a.onBeforeRender, onBeforeRender = _d === void 0 ? function () { return undefined; } : _d, onData = _a.onData, serverFilesRoot = _a.serverFilesRoot, builtinsPath = _a.builtinsPath, _e = _a.onFinish, onFinish = _e === void 0 ? function () { return undefined; } : _e, _f = _a.options, options = _f === void 0 ? defaultCompilerOptions_1.defaultOptions : _f, jsxPreferences = _a.jsxPreferences, hooks = _a.hooks;
    var nodeFlagStore = new nodeFlagStore_1.NodeFlagStore(); // TODO: check! this may lead to unforeseen consequences in sequential rebuilds
    watchProgramFactory_1.getWatchProgram(fileNames, ignoredImports, replacedImports, baseDir, tsPaths, __assign(__assign({}, defaultCompilerOptions_1.defaultOptions), options), function (program, replacements, errcode) {
        translateProgram_1.translateProgram(program, replacements, nodeFlagStore, log, {
            aliases: aliases,
            baseDir: baseDir,
            disableCodeElimination: disableCodeElimination,
            namespaces: namespaces,
            serverFilesRoot: serverFilesRoot,
            builtinsPath: builtinsPath,
            encoding: encoding,
            printImportTree: printImportTree,
            jsxPreferences: jsxPreferences,
            hooks: hooks,
            onBeforeRender: onBeforeRender,
            onData: function (sourceFilename, targetFilename, content) { return onData(sourceFilename, targetFilename, content, errcode); },
            onFinish: onFinish,
            options: __assign(__assign({}, defaultCompilerOptions_1.defaultOptions), options),
        });
    }, log, getCloseHandle);
    return nodeFlagStore;
};
exports.translateCodeAndWatch = translateCodeAndWatch;
