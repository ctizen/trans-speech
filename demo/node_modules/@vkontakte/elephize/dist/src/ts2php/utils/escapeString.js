"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.escapeExprLiteral = exports.unescapeHtml = exports.escapeTextLiteral = exports.escapeString = exports.escapeHtml = void 0;
var html_entities_1 = require("html-entities");
/** Used to map characters to HTML entities. */
var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    '\'': '&#x27;',
};
/** Used to match HTML entities and HTML characters. */
var reUnescapedHtml = /[&<>"']/g;
var reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
function escapeHtml(str) {
    return (str && reHasUnescapedHtml.test(str)) ?
        str.replace(reUnescapedHtml, function (chr) { return htmlEscapes[chr]; }) :
        (str || '');
}
exports.escapeHtml = escapeHtml;
function escapeString(str) {
    return str
        .replace(/"/g, '\\"')
        .replace(/\$/g, '\\$')
        .replace(/\0/g, '\\0')
        .replace(/\\/g, '\\');
}
exports.escapeString = escapeString;
function escapeTextLiteral(txt, escapeAll) {
    if (escapeAll === void 0) { escapeAll = false; }
    var txtDecoded = html_entities_1.decode(txt);
    var txtEscaped = escapeAll
        ? html_entities_1.encode(txtDecoded, { mode: 'nonAscii' })
        : escapeHtml(txtDecoded);
    var str = txtEscaped.replace(/^\s+|\s+$/g, ' ');
    if (str !== ' ' && str !== '  ') {
        return '"' + str + '"';
    }
    return '';
}
exports.escapeTextLiteral = escapeTextLiteral;
function unescapeHtml(str) {
    return str && Object.keys(htmlEscapes).reduce(function (acc, k) {
        return acc.replace(new RegExp(htmlEscapes[k], 'g'), k);
    }, str).replace(/"/g, '\\"');
}
exports.unescapeHtml = unescapeHtml;
// Special workaround to match react behavior for escaping literal strings in jsx expressions in attributes
function escapeExprLiteral(txt) {
    var txtDecoded = html_entities_1.decode(txt);
    var txtEscaped = html_entities_1.encode(txtDecoded, { mode: 'nonAscii' });
    var str = unescapeHtml(txtEscaped.replace(/^\s+|\s+$/g, ' '));
    if (str !== ' ' && str !== '  ') {
        return '"' + str + '"';
    }
    return '';
}
exports.escapeExprLiteral = escapeExprLiteral;
